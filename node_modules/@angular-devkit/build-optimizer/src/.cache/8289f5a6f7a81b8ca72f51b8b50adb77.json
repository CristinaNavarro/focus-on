{"remainingRequest":"/Users/jorgemac/Documents/Development/focuson-frontend/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/jorgemac/Documents/Development/focuson-frontend/node_modules/ngx-monaco-editor/editor.component.js","dependencies":[{"path":"/Users/jorgemac/Documents/Development/focuson-frontend/node_modules/ngx-monaco-editor/editor.component.js","mtime":1527180432425},{"path":"/Users/jorgemac/Documents/Development/focuson-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1526325484405},{"path":"/Users/jorgemac/Documents/Development/focuson-frontend/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1525974352000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\nimport { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { __param } from \"tslib\";\nimport { Component, forwardRef, Inject, Input, NgZone } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BaseEditor } from './base-editor';\nimport { NGX_MONACO_EDITOR_CONFIG } from './config';\nimport { fromEvent } from 'rxjs';\nvar EditorComponent = /*@__PURE__*/ (function (_super) {\n    __extends(EditorComponent, _super);\n    function EditorComponent(zone, editorConfig) {\n        var _this = _super.call(this, editorConfig) || this;\n        _this.zone = zone;\n        _this.editorConfig = editorConfig;\n        _this._value = '';\n        _this.propagateChange = function (_) { };\n        _this.onTouched = function () { };\n        return _this;\n    }\n    EditorComponent_1 = EditorComponent;\n    Object.defineProperty(EditorComponent.prototype, \"model\", {\n        set: function (model) {\n            this.options.model = model;\n            if (this._editor) {\n                this._editor.dispose();\n                this.initMonaco(this.options);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EditorComponent.prototype.writeValue = function (value) {\n        var _this = this;\n        this._value = value || '';\n        // Fix for value change while dispose in process.\n        setTimeout(function () {\n            if (_this._editor && !_this.options.model) {\n                _this._editor.setValue(_this._value);\n            }\n        });\n    };\n    EditorComponent.prototype.registerOnChange = function (fn) {\n        this.propagateChange = fn;\n    };\n    EditorComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    EditorComponent.prototype.initMonaco = function (options) {\n        var _this = this;\n        var hasModel = !!options.model;\n        if (hasModel) {\n            options.model = monaco.editor.createModel(options.model.value, options.model.language, options.model.uri);\n        }\n        this._editor = monaco.editor.create(this._editorContainer.nativeElement, options);\n        if (!hasModel) {\n            this._editor.setValue(this._value);\n        }\n        this._editor.onDidChangeModelContent(function (e) {\n            var value = _this._editor.getValue();\n            _this.propagateChange(value);\n            // value is not propagated to parent when executing outside zone.\n            _this.zone.run(function () { return _this._value = value; });\n        });\n        this._editor.onDidBlurEditor(function (e) {\n            _this.onTouched();\n        });\n        // refresh layout on resize event.\n        if (this._windowResizeSubscription) {\n            this._windowResizeSubscription.unsubscribe();\n        }\n        this._windowResizeSubscription = fromEvent(window, 'resize').subscribe(function () { return _this._editor.layout(); });\n        this.onInit.emit(this._editor);\n    };\n    EditorComponent = EditorComponent_1 = __decorate([\n        __param(1, Inject(NGX_MONACO_EDITOR_CONFIG))\n    ], EditorComponent);\n    return EditorComponent;\n    var EditorComponent_1;\n}(BaseEditor));\nexport { EditorComponent };\n",null]}